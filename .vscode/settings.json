{
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  // Inspired by antfu's config, see: https://github.com/antfu/vscode-file-nesting-config
  "explorer.fileNesting.patterns": {
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "readme*": "LICENSE, project-words.txt, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "package.json": ".npmrc, .npmignore, package-lock.json, yarn.lock",
    "pnpm-workspace.yaml": "nx.json, .nxignore, pnpm-lock.yaml",
    "tsconfig.json": "tsconfig.*.json",
    ".eslint*": ".editorconfig, .eslintignore, .commitlintrc.json, .czrc",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "index.ts": "index.*.ts",
    "main.ts": "main.*.ts"
  },
  "explorer.incrementalNaming": "smart",
  "editor.tabSize": 2,
  "prettier.enable": false,
  "editor.formatOnSave": false,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "files.associations": {
    "*.cjson": "jsonc",
    "*.wxss": "css",
    "*.wxs": "javascript",
    ".cjs": "javascript",
    ".mjs": "javascript",
    "*.css": "postcss",
    ".vue": "vue",
    ".md": "markdown",
    ".code-snippets": "json"
  },
  "files.autoSave": "off",
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "[vue]": {
    // "editor.defaultFormatter": "Vue.volar"
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.tabSize": 2
  },
  "[haskell]": {
    "editor.defaultFormatter": "vigoo.stylish-haskell"
  },
  "[handlebars]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[scss]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[postcss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    // "editor.defaultFormatter": "vscode.html-language-features"
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.autoClosingBrackets": "always"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.autoClosingBrackets": "always"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.autoClosingBrackets": "always"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[json]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.autoClosingBrackets": "always"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.autoClosingBrackets": "always"
  },
  "[json5]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.autoClosingBrackets": "always"
  },
  "eslint.alwaysShowStatus": true,
  "eslint.format.enable": true,
  "eslint.validate": [
    {
      "language": "javascript",
      "autoFix": true
    },
    {
      "language": "javascriptreact",
      "autoFix": true
    },
    {
      "language": "typescript",
      "autoFix": true
    },
    {
      "language": "typescriptreact",
      "autoFix": true
    },
    {
      "language": "json",
      "autoFix": true
    },
    {
      "language": "jsonc",
      "autoFix": true
    },
    {
      "language": "json5",
      "autoFix": true
    },
    {
      "language": "html",
      "autoFix": true
    },
    {
      "language": "markdown",
      "autoFix": false
    },
    {
      "language": "vue",
      "autoFix": true
    }
  ],
  "tailwindCSS.includeLanguages": {
    "typescript": "html",
    "javascript": "html",
    "vue": "html",
    "plaintext": "html"
  },
  "tailwindCSS.experimental.classRegex": [
    "tw\\('([^']*)'\\)",
    // @see https://github.com/paolotiu/tailwind-regex-list
    [
      "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)?\"\\[([^\"]*)\\]\"",
      "(?:')([^']*)(?:')"
    ],
    [
      "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)?\"\\[([^\"]*)\\]\"",
      "(?:`)([^`]*)(?:`)"
    ],
    [
      "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)?'\\[([^']*)\\]'",
      "(?:\")([^\"]*)(?:\")"
    ],
    [
      "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)?'\\[([^']*)\\]'",
      "(?:`)([^`]*)(?:`)"
    ],
    "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)'([^']*)'",
    "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)`([^`]*)`",
    "(?:c|C)lass(?:es|Name)s?(?:\\s*?)=(?:\\s*?)\"([^\"]*)\"",
    "(?::\\s*?)'([^']*)'",
    "(?::\\s*?)`([^`]*)`",
    "(?::\\s*?)\"([^\"]*)\""
  ],
  "cSpell.enabled": true,
  "cSpell.language": "en",
  "cSpell.caseSensitive": false,
  "cSpell.customDictionaries": {
    "project-words": {
      "name": "project-words",
      "path": "${workspaceRoot}/project-words.txt",
      "description": "Words used in this project",
      "addWords": true
    }
  },
  "cSpell.showStatus": true,
  // Specify file types to spell check.
  "cSpell.enabledLanguageIds": [
    "csharp",
    "go",
    "javascript",
    "javascriptreact",
    "markdown",
    "php",
    "plaintext",
    "typescript",
    "typescriptreact",
    "yml",
    "yaml",
    "json",
    "json5",
    "jsonc",
    "css"
  ],
  "cSpell.allowCompoundWords": false,
  "cSpell.globRoot": "${workspaceFolder}",
  "cSpell.ignorePaths": [
    "node_modules",        // this will ignore anything the node_modules directory
    "**/node_modules",     // the same for this one
    "**/node_modules/**",  // the same for this one
    "node_modules/**",     // Doesn't currently work due to how the current working directory is determined.
    "vscode-extension",    //
    ".git",                // Ignore the .git directory
    "*.dll",               // Ignore all .dll files.
    "**/*.dll",             // Ignore all .dll files
    "package-lock.json",
    ".vscode",
    ".vscode-insiders"
  ],
  "cSpell.diagnosticLevel": "Hint",
  "grammarly.config.documentDialect": "auto-text",
  "grammarly.config.documentDomain": "general",
  "grammarly.files.include": ["**/README.md", "**/readme.md", "**/*.txt", "**/*.md"],
  "grammarly.files.exclude": ["**/node_modules/**"]
}
